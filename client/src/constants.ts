export const LANGUAGE_VERSIONS: Record<string, string> = {
  javascript: "18.15.0",
  python: "3.10.0",
  java: "15.0.2",
  c: "11.3.0",
  cpp: "10.2.0",
  csharp: "6.12.0",
  php: "8.2.3",
  typescript: "5.0.3",
  go: "1.21.0",
  rust: "1.70.0",
  kotlin: "1.9.0",
  swift: "5.8.1",
  ruby: "3.0.0",
  bash: "5.2.15",
  r: "4.2.1",
  dart: "2.19.6",
  julia: "1.9.3",
  haskell: "9.4.5",
  lua: "5.4.6",
  perl: "5.38.0",
  scala: "3.2.2",
  elixir: "1.14.3",
  nim: "1.8.8",
  zig: "0.11.0",
  matlab: "R2025b",
  groovy: "4.0.13",
  ocaml: "5.0.0",
  fortran: "2023.1",
  typescript_node: "20.0.0",
  dart_fvm: "3.2.4",
};

export const LANGUAGE_MAPPING: Record<string, string> = {
  ".js": "javascript",
  ".jsx": "javascript",
  ".py": "python",
  ".java": "java",
  ".c": "c",
  ".cpp": "cpp",
  ".cs": "csharp",
  ".php": "php",
  ".ts": "typescript",
  ".tsx": "typescript",
  ".go": "go",
  ".rs": "rust",
  ".kt": "kotlin",
  ".swift": "swift",
  ".rb": "ruby",
  ".sh": "bash",
  ".r": "r",
  ".dart": "dart",
  ".jl": "julia",
  ".hs": "haskell",
  ".lua": "lua",
  ".pl": "perl",
  ".scala": "scala",
  ".ex": "elixir",
  ".nim": "nim",
  ".zig": "zig",
  ".m": "matlab",
  ".groovy": "groovy",
  ".ml": "ocaml",
  ".f90": "fortran",
};

export const CODE_SNIPPETS = {
  javascript: `function greet(name) {\n\tconsole.log("Hello, " + name + "!");\n}\n\ngreet("ED08");\n`,
  python: `def greet(name):\n\tprint("Hello, " + name + "!")\n\ngreet("ED08")\n`,
  java: `public class HelloWorld {\n\tpublic static void main(String[] args) {\n\t\tSystem.out.println("Hello World");\n\t}\n}\n`,
  c: `#include <stdio.h>\n\nint main() {\n    printf("Hello, World!");\n    return 0;\n}\n`,
  cpp: `#include <iostream>\n\nint main() {\n    std::cout << "Hello, World!";\n    return 0;\n}\n`,
  csharp: 'using System;\n\nnamespace HelloWorld\n{\n\tclass Hello { \n\t\tstatic void Main(string[] args) {\n\t\t\tConsole.WriteLine("Hello World in C#");\n\t\t}\n\t}\n}\n',
  php: "<?php\n\n$name = 'ED08';\necho $name;\n",
  typescript: `type Params = {\n\tname: string;\n}\n\nfunction greet(data: Params) {\n\tconsole.log("Hello, " + data.name + "!");\n}\n\ngreet({ name: "ED08" });\n`,
  go: `package main\n\nimport "fmt"\n\nfunc main() {\n\tfmt.Println("Hello, World!")\n}\n`,
  rust: `fn main() {\n    println!("Hello, World!");\n}\n`,
  kotlin: `fun main() {\n    println("Hello, World!")\n}\n`,
  swift: `print("Hello, World!")\n`,
  ruby: `puts "Hello, World!"\n`,
  bash: `#!/bin/bash\n\necho "Hello, World!"\n`,
  r: `print("Hello, World!")\n`,
  dart: `void main() {\n  print('Hello, World!');\n}\n`,
  julia: `println("Hello, World!")\n`,
  haskell: `main = putStrLn "Hello, World!"\n`,
  lua: `print("Hello, World!")\n`,
  perl: `print "Hello, World!\\n";\n`,
  scala: `object HelloWorld {\n  def main(args: Array[String]): Unit = {\n    println("Hello, World!")\n  }\n}\n`,
  elixir: `IO.puts "Hello, World!"\n`,
  nim: `echo "Hello, World!"\n`,
  zig: `const std = @import("std");\n\npub fn main() void {\n    std.debug.print("Hello, World!\\n", .{});\n}\n`,
  matlab: `disp('Hello, World!');\n`,
  groovy: `println 'Hello, World!'\n`,
  ocaml: `print_endline "Hello, World!";;\n`,
  fortran: `program hello\nprint *, "Hello, World!"\nend program hello\n`,
};

